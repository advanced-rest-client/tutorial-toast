/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   tutorial-toast.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {PolymerElement} from '@polymer/polymer/polymer-element.js';

import {mixinBehaviors} from '@polymer/polymer/lib/legacy/class.js';

import {IronA11yAnnouncer} from '@polymer/iron-a11y-announcer/iron-a11y-announcer.js';

import {IronOverlayBehaviorImpl, IronOverlayBehavior} from '@polymer/iron-overlay-behavior/iron-overlay-behavior.js';

import {html} from '@polymer/polymer/lib/utils/html-tag.js';

declare namespace ApiElements {

  /**
   * An on screen minimal tutorial.
   *
   * ### Example
   *
   * ```html
   * <tutorial-toast>
   *  <p>This is a tutorial for the page. Take a hint.</p>
   * </tutorial-toast>
   * ```
   *
   * ### Styling
   *
   * `<tutorial-toast>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--tutorial-toast` | Mixin applied to the element | `{}`
   * `--tutorial-toast-background-color` | The tutorial-toast background-color | `#323232`
   * `--tutorial-toast-color` | The tutorial-toast color | `#f1f1f1`
   * `--tutorial-toast-min-width` | Min width of the tutorial toast | `60%`
   * `--tutorial-toast-left` | Left position for the tutorial toast | `20%`
   * `--tutorial-toast-button` | Mixin applied to the close tutorial button | `{}`
   * `--tutorial-toast-button-color` | Color of the action button to close the tutorial toast | ``
   * `--tutorial-toast-button-background-color` | Background color of action button | ``
   */
  class TutorialToast extends
    Polymer.IronOverlayBehavior(
    Object) {

    /**
     * Read-only. Can auto-close if duration is a positive finite number.
     *    
     */
    readonly _canAutoClose: any;

    /**
     * The element to fit `this` into.
     * Overridden from `Polymer.IronFitBehavior`.
     */
    fitInto: object|null|undefined;

    /**
     * The duration in milliseconds to show the toast.
     * Set to `0`, a negative number, or `Infinity`, to disable the
     * toast auto-closing.
     */
    duration: number|null|undefined;

    /**
     * Overridden from `IronOverlayBehavior`.
     * Set to false to enable closing of the toast by clicking outside it.
     */
    noCancelOnOutsideClick: boolean|null|undefined;

    /**
     * Overridden from `IronOverlayBehavior`.
     * Set to true to disable auto-focusing the toast or child nodes with
     * the `autofocus` attribute` when the overlay is opened.
     */
    noAutoFocus: boolean|null|undefined;
    connectedCallback(): void;
    disconnectedCallback(): void;

    /**
     * Overridden from `IronOverlayBehavior`.
     * Called when the value of `opened` changes.
     */
    _openedChanged(): void;

    /**
     * Overridden from `IronOverlayBehavior`.
     */
    _renderOpened(): void;

    /**
     * Overridden from `IronOverlayBehavior`.
     */
    _renderClosed(): void;
    _onFitIntoChanged(fitInto: any): void;
  }
}

declare global {

  interface HTMLElementTagNameMap {
    "tutorial-toast": ApiElements.TutorialToast;
  }
}
